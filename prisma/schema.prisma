// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id              BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  firstName       String             @db.VarChar(255)
  lastName        String             @db.VarChar(255)
  email           String             @unique @db.VarChar(255)
  mobile          String             @unique @db.VarChar(15)
  password        String             @db.VarChar(255)
  otp             String             @db.VarChar(50)
  createdAt       DateTime           @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt       DateTime           @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  customers       customers[]
  categories      categories[]
  products        products[]
  invoices        invoices[]
  invoiceProducts invoice_products[]
}

model customers {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name      String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  mobile    String   @db.VarChar(15)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  user_id BigInt @db.UnsignedBigInt

  invoices invoices[]

  users users @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model invoices {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id BigInt   @map("customer_id") @db.UnsignedBigInt
  total       String   @db.VarChar(10)
  discount    String   @db.VarChar(10)
  vat         String   @db.VarChar(10)
  payable     String   @db.VarChar(10)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  user_id BigInt @db.UnsignedBigInt

  invoiceProducts invoice_products[]

  users     users     @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  customers customers @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model categories {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_id   BigInt   @map("user_id") @db.UnsignedBigInt
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  products products[]

  users users @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model products {
  id                 BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  user_id            BigInt            @db.UnsignedBigInt
  category_id        BigInt            @db.UnsignedBigInt
  name               String            @db.VarChar(255)
  price              String            @db.VarChar(10)
  unit               String            @db.VarChar(255)
  image_url          String            @db.VarChar(500)
  createdAt          DateTime          @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt          DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)
  invoice_productsId BigInt?           @db.UnsignedBigInt
  invoice_products   invoice_products?

  // @relation(fields: [invoice_productsId], references: [id])
  users      users      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  categories categories @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model invoice_products {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  userId    BigInt   @map("user_id") @db.UnsignedBigInt
  productId BigInt   @unique @map("product_id") @db.UnsignedBigInt
  invoiceId BigInt   @map("invoice_id") @db.UnsignedBigInt
  quantity  String   @db.VarChar(10)
  salePrice String   @db.VarChar(10)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(0)

  users    users    @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoices invoices @relation(fields: [invoiceId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  products products @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}
